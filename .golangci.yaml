
# Note: Run -----------------------------------------------------------------------------------------------------------

run:
  issues-exit-code: 0
  timeout: 1m
  modules-download-mode: mod

  skip-dirs-use-default: false
  skip-files:
    - ".*\\.weirdfile\\.go$"
    - lib/bad.go

  allow-parallel-runners: true

# Note: Output --------------------------------------------------------------------------------------------------------

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: false
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

# Issues: -------------------------------------------------------------------------------------------------------------

issues:
  exclude-rules:
  - path: ".*_test.go"
    linters:
    - funlen

  fix: false

  # Note: Linters --------------------------------------------------------------------------------------------------------

linters:
  enable-all: true

  disable:
  - gochecknoglobals # i know, but sometimes its required.
  - deadcode         # covered by `unused` and `varcheck`
  - testpackage      # opinionated
  - paralleltest     # covered by scopelint and tparalell

  - wsl              # fuckit 1
  - whitespace       # fuckit 2

  # - godot            # practically, unused
  - godox            # practically, unused

# Note: Issues ---------------------------------------------------------------------------------------------------------

linters-settings:

  gocritic:
    enabled-tags: [  experimental, opinionated, performance, style ]
    disabled-checks:
      - whyNoLint
      - emptyStringTest

  forbidigo:
    forbid: [ "ginkgo\\.F.* " ]
    exclude_godoc_examples: true

  lll: { "line-length": 120, "tabwidth": 1 }

  maligned: {"suggest-new": true}

  nolintlint:
    allow-leading-space: false
    allow-unused: true
    require-explanation: false
    require-specific: false


  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false

    # [deprecated] comma-separated list of pairs of the form pkg:regex
    # the regex is used to ignore names within pkg. (default "fmt:.*").
    # see https://github.com/kisielk/errcheck#the-deprecated-method for details
    ignore: fmt:.*,io/ioutil:^Read.*

    # path to a file containing a list of functions to exclude from checking
    # see https://github.com/kisielk/errcheck#excluding-functions for details
    # exclude: /path/to/file.txt

# Severity: -----------------------------------------------------------------------------------------------------------

severity:
  default-severity: error
  case-sensitive: false

  # Coloring According Severity.
  colors:
    error: red
    warn: yellow

    info: blue

  rules:
  - linters:
    - exhaustivestruct
    - gomnd
    - godot
    - lll
    severity: info

  - linters:
    - goerr113
    severity: warn
